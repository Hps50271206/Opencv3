#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <iostream>

using namespace std;
using namespace cv;

#define WINDOW_NAME "【程序窗口】"

int g_nThresholdValue = 100;
int g_nThresholdType = 3;
Mat g_srcImage, g_grayImage, g_dstImage;

static void ShowHelpText();
void on_Threshold(int, void*);  // 回调函数

int main()
{
	ShowHelpText();

	// 1.读入源图片
	g_srcImage = imread("C:/Users/lenvo/Desktop/background/5.jpg", 199);
	if (!g_srcImage.data)
	{
		printf("读取图片错误，请确定目录下是否有指定的图片存在");
		return false;
	}

	// 2.保留一份原图的灰度图
	cvtColor(g_srcImage, g_grayImage, COLOR_RGB2GRAY);

	// 3.创建窗口并显示原始图
	namedWindow(WINDOW_NAME, WINDOW_AUTOSIZE);

	// 4.创建滑动条来控制阈值
	createTrackbar("模式", WINDOW_NAME, &g_nThresholdType, 4, on_Threshold);
	createTrackbar("参数值", WINDOW_NAME, &g_nThresholdValue, 100, on_Threshold);

	// 5.初始化自定义的阈值回调函数
	on_Threshold(0, 0);

	while (1)
	{
		int key;
		key = waitKey(20);
		if ((char)key == 27) break;
	}
}

void on_Threshold(int, void*)
{
	// 调用阈值函数
	threshold(g_grayImage, g_dstImage, g_nThresholdValue, 255, g_nThresholdType);
	// 更新效果图
	imshow(WINDOW_NAME, g_dstImage);
}

static void ShowHelpText()  
{  
	//输出一些帮助信息  
	printf(	"\n\t欢迎来到【基本阈值操作】示例程序~\n\n");  
	printf(	"\n\t按键操作说明: \n\n"  
		"\t\t键盘按键【ESC】- 退出程序\n"  
		"\t\t滚动条模式0- 二进制阈值\n"  
		"\t\t滚动条模式1- 反二进制阈值\n"  
		"\t\t滚动条模式2- 截断阈值\n"  
		"\t\t滚动条模式3- 反阈值化为0\n"  
		"\t\t滚动条模式4- 阈值化为0\n"  );  
}  