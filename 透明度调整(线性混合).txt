#include <opencv2/opencv.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <string>

using namespace cv;

#define WINDOW_NAME "线性混合示例"  // 为窗口标题定义的宏

const int g_nMaxAlphaValue = 100;  // Alpha的最大值
int g_nAlphaValueSlider;  // 滑动条对应的变量
double g_dAlphaValue;
double g_dbetaValue;

Mat g_srcImage1;
Mat g_srcImage2;
Mat g_dstImage;
void on_Trackbar(int , void*)
{
	// 求出当前alpha值相对于最大值的比例
	g_dAlphaValue = (double)g_nAlphaValueSlider / g_nMaxAlphaValue;
	// 则beta值为1减去alpha值
	g_dbetaValue = (1.0 - g_dAlphaValue);

	// 根据alpha 和 beta值进行线性混合
	addWeighted(g_srcImage1, g_dAlphaValue, g_srcImage2, g_dbetaValue, 0.0, g_dstImage);

	// 显示效果图
	imshow(WINDOW_NAME, g_dstImage);
}

int main(int argc, char** argv)
{
	// 加载图像(两图像的尺寸需相同)
	g_srcImage1 = imread("C:/Users/lenvo/Desktop/background/5.jpg", 199);
	g_srcImage2 = imread("C:/Users/lenvo/Desktop/background/6.jpg", 199);
	if (!g_srcImage1.data)
	{
		printf("读取第一幅图片错误，请确定目录下是否有imread函数指定图片存在!\n");
		return -1;
	}
	if (!g_srcImage2.data)
	{
		printf("读取第二幅图片错误，请确定目录下是否有imread函数指定图片存在!\n");
		return -1;
	}

	// 设置滑动条初始值为70
	g_nAlphaValueSlider = 70;

	// 创建窗体
	namedWindow(WINDOW_NAME, 1);

	// 在创建的窗体中创建一个滑动条控件
	char TrackbarName[50];
	// sprintf将一个格式化的字符串输出到一个目的字符串中
	sprintf_s(TrackbarName, "透明值  %d", g_nMaxAlphaValue);  // sprintf_s是sprintf的安全版本

	// 参数分别为(轨迹条的名字，窗体名字，滑块的位置，滑块可达到的最值，回调函数（每次滑块位置改变都进行回调）)
	createTrackbar(TrackbarName, WINDOW_NAME, &g_nAlphaValueSlider, g_nMaxAlphaValue, on_Trackbar);

	// 结果在回调函数中显示
	on_Trackbar(g_nAlphaValueSlider, 0);

	// 按任意键退出
	waitKey(0);

	return 0;
}